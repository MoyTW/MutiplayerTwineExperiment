:: Ch2_HowToPlay
It's time to run your investigation! You have two days to solve the case, or President Caesar will be very annoyed with you and you won't get invited too his Christmas ball. A terrifying thought. It would be incredibly mortifying and shameful.

If you aren't on a voice call with your partner, now is an ideal time to do so. While voice calls are not mandatory, some sort of communication is, in order to keep the game states synced up.
<h2>How To Play</h2>\
<<include 'HowToPlaySnippet'>>
You can review these instructions by hitting the <strong>How To Play</strong> button on the sidebar.

<<button [[Let's go!|Ch2_SelectNextCluePoint]]>><</button>>


:: Ch2_SelectNextCluePoint
<h1>Select your action</h1>\
You have $turnsRemaining turns remaining.

<<set _cluePointsInOrder to setup.CluePointsInOrder>>\
@@#next-clue-point-clue-point-buttons;<div id='next-clue-point-columns' class='row'>\
  <div id='next-clue-point-people' class='column'>\
    <h2 style='text-align:center'>People</h2>\
    <<for _i to 0; _i lt _cluePointsInOrder.length; _i++>><<capture _i>>\
      <<set _pointObj to $cluePoints.get(_cluePointsInOrder[_i])>>\
      <<if _pointObj.known and not _pointObj.visited and _pointObj.type is 'PERSON'>>\
        <<button _pointObj.name>>
          <<send 'NEXT_CLUE_POINT_SELECTED' { cluePointKey: setup.CluePointsInOrder[State.getVar('_i')] }>><<script>>
            const cluePointKey = setup.CluePointsInOrder[State.getVar('_i')];
            $('#next-clue-point-player-selection').text('You have selected ' + State.getVar('$cluePoints').get(cluePointKey).name + '.');
          <</script>><</send>>
        <</button>>\
      <</if>>\
    <</capture>><</for>>\
  </div>\
  <div id='next-clue-point-places' class='column'>\
    <h2 style='text-align:center'>Places</h2>\
    <<for _i to 0; _i lt _cluePointsInOrder.length; _i++>><<capture _i>>\
      <<set _pointObj to $cluePoints.get(_cluePointsInOrder[_i])>>\
      <<if _pointObj.known and not _pointObj.visited and _pointObj.type is 'PLACE'>>\
        <<button _pointObj.name>>
          <<send 'NEXT_CLUE_POINT_SELECTED' { cluePointKey: setup.CluePointsInOrder[State.getVar('_i')] }>><<script>>
            const cluePointKey = setup.CluePointsInOrder[State.getVar('_i')];
            $('#next-clue-point-player-selection').text('You have selected ' + State.getVar('$cluePoints').get(cluePointKey).name + '.');
          <</script>><</send>>
        <</button>>\
      <</if>>\
    <</capture>><</for>>\
  </div>\
</div>@@\

@@#next-clue-point-player-selection;<<if $nextCluePointPlayerSelection is ''>>\
  You have not yet selected an action.\
<<else>>\
  You have selected $nextCluePointPlayerSelection.\
<</if>>@@
@@#next-clue-point-partner-selection;<<if $nextCluePointPartnerSelection is ''>>\
  Your partner has not yet selected an action.\
<<else>>\
  Your partner has selected $nextCluePointPartnerSelection.\
<</if>>@@

@@#next-clue-point-confirm;<<disable>><<button 'Confirm selection.'>>
  <<send 'NEXT_CLUE_POINT_CONFIRMED' {}>><<script>>
    const button = $('#next-clue-point-confirm button');
    button.html('Waiting for partner to confirm...');
    button.prop('disabled', true);
    $('#next-clue-point-clue-point-buttons button').prop('disabled', true);
  <</script>><</send>>
<</button>><</disable>>@@
<<nobr>>
  <<receive 'NEXT_CLUE_POINT_SELECTED'>><<script>>
    const data = State.temporary.receiveData;
    if (data.clientId === State.variables.clientId) {
      State.variables.nextCluePointPlayerSelection = data.cluePointKey;
      $('#next-clue-point-player-selection').text('You have selected ' + State.getVar('$cluePoints').get(data.cluePointKey).name + '.');
    } else {
      State.variables.nextCluePointPartnerSelection = data.cluePointKey;
      $('#next-clue-point-partner-selection').text('Your partner has selected ' + State.getVar('$cluePoints').get(data.cluePointKey).name + '.');
    }
    // TODO: Synchronize the states
    const playerSelection = State.variables.nextCluePointPlayerSelection;
    const partnerSelection = State.variables.nextCluePointPartnerSelection;
    if (playerSelection !== '' && partnerSelection !== '' && playerSelection != partnerSelection) {
      if (!State.variables.nextCluePointPlayerConfirmed) {
        $('#next-clue-point-confirm button').prop('disabled', false);
      }
    } else {
      $('#next-clue-point-confirm button').prop('disabled', true);
    }
  <</script>><</receive>>
  <<receive 'NEXT_CLUE_POINT_CONFIRMED'>><<script>>
    const data = State.temporary.receiveData;
    if (data.clientId === State.variables.clientId) {
      State.variables.nextCluePointPlayerConfirmed = true;
      const button = $('#next-clue-point-confirm button');
      button.html('Waiting for partner to confirm...');
      button.prop('disabled', true);
      $('#next-clue-point-clue-point-buttons button').prop('disabled', true);
    } else {
      State.variables.nextCluePointPartnerConfirmed = true;
    }
    if (State.variables.nextCluePointPlayerConfirmed && State.variables.nextCluePointPartnerConfirmed) {
      State.variables.turnsRemaining -= 1;
      setup.markCluePointVisited(State.variables.nextCluePointPlayerSelection, State.variables.playerCharacterName);
      setup.markCluePointVisited(State.variables.nextCluePointPartnerSelection, State.variables.partnerCharacterName)
      State.variables.cluePointPassage = setup.getCluePointPassage(State.variables.nextCluePointPlayerSelection);

      // Wipe here, so that we can maintain if one player goes faster than the next
      State.variables.nextCluePointPlayerSelection = '';
      State.variables.nextCluePointPartnerSelection = '';
      State.variables.nextCluePointPlayerConfirmed = false;
      State.variables.nextCluePointPartnerConfirmed = false;
      
      Engine.play('Ch2_DisplayCluePoint');
    }
  <</script>><</receive>>
<</nobr>>


:: Ch2_DisplayCluePoint
<<include $cluePointPassage>>

<<if $turnsRemaining gt 0>>\
<<button [[Continue|Ch2_SelectNextCluePoint]]>><</button>>
<<else>>\
<<button [[Continue|Ch3_Quiz]]>><</button>>
<</if>>\