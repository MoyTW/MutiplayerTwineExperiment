:: StoryTitle
Antony And Cleopatra (Working Title)


:: StoryData
{
	"ifid": "FBCD63D7-CEED-42AC-BD41-D726315DAB28",
  "format": "SugarCube",
  "format-version": "2.36.1"
}


:: IdentifyClient
<<script>>
const storage = window.localStorage;
const clientId = storage.getItem('multiplayerClientId');

if (clientId && setup.isUUID(clientId)) {
  State.variables.clientId = clientId;
  console.log('Retrieved clientId from localstorage as ' + clientId)
} else {
  const newClientId = setup.uuidv4();
  storage.setItem('multiplayerClientId', newClientId);
  State.variables.clientId = newClientId;
  console.log('Generated new clientId as ' + newClientId)
}
<</script>>\


:: InitializeGameVariables
<<nobr>>
/* Global */
/* <<set $turnsRemaining to 7>> */
<<set $startTurns to 1>>
<<set $turnsRemaining to $startTurns>>

/* SelectCharacter */
<<set $playerCharacterName to ''>>
<<set $partnerCharacterName to ''>>
<<set $selectCharacterPlayerConfirmed to false>>
<<set $selectCharacterPartnerConfirmed to false>>

/* Ch2_SelectNextCluePoint */
<<set $nextCluePointPlayerSelection to ''>>
<<set $nextCluePointPartnerSelection to ''>>
<<set $nextCluePointPlayerConfirmed to false>>
<<set $nextCluePointPartnerConfirmed to false>>
<<set $cluePointPassage to ''>>

/* Ch3_Quiz */
<<set $viewTheAnswersPlayerConfirmed to false>>
<<set $viewTheAnswersPartnerConfirmed to false>>
<</nobr>>\


:: PassageReady
<<script>>
console.log('Autosaving for scene: ', State.passage, ' session: ', State.variables.sessionId, State.variables);
Save.autosave.save();
// This goes in PassageReady because it can't go in StoryInit - we can't check the state in StoryInit, because it's called before the game is restored!
if (State.variables.shouldBeConnected === true) {
  setup.Socket.connect(State.variables.sessionId, {
    'type': 'AUTOSAVE',
    'clientId': State.variables.clientId,
    'serializedSave': Save.serialize()
  });
}
<</script>>


:: StoryInit
<<script>>
setup.processPassages();

/* Connect the UI bar */
const rightUiBar = $('<div id="right-ui-bar"></div>').insertAfter("#ui-bar");
rightUiBar.append('<div id="right-ui-bar-tray"><button id="right-ui-bar-toggle" tabindex="0" title="Toggle the Right UI bar" aria-label="Toggle the Right UI bar" type="button"></button></div>');
rightUiBar.append('<div id="right-ui-bar-body"></div>');

/* Attach the toggle button click. */
rightUiBar.find('#right-ui-bar-toggle').ariaClick({
		label : "Toggle the Right UI bar"
	}, function () {
		rightUiBar.toggleClass('stowed');
	});

/* Automatically show the contents of the RightSidebar passage in the right-ui-bar-body element. */
postrender["Display Right Sidebar Contents"] = function (content, taskName) {
	setPageElement('right-ui-bar-body', 'RightSidebar');
};

/*
	To have your code stow the bar use:
	<<addclass "#right-ui-bar" "stowed">>
	
	To unstow the bar use:
	<<removeclass "#right-ui-bar" "stowed">>
*/
$('#ui-bar').remove();
$(document.head).find('#style-ui-bar').remove();
<</script>>\
<<widget "IfAntony">>\
  <<if $playerCharacterName is 'Antony'>>\
    <<print $args[0]>>\
  <<else>>\
    <<print $args[1]>>\
  <</if>>\
<</widget>>\


:: Start
<<include [[IdentifyClient]]>>\
/* Websocket tracking */\
<<set $shouldBeConnected to false>>\
<<set $websocketProcessedUpToMs to 0>>\
<h1>Introduction</h1>\
The year is 2021. Neo America is prospering under the stern yet wise direction of President for Life, Gaius Julius Ceasar. 330 million souls live, love, and laugh, all working tirelessly for the glory of the American people!

But with light, comes darkness. With prosperity, comes misery. And with law comes crime. Heinous crimes! Shocking crimes! Cunning crimes! And sometimes, very rarely, crimes so devious, so secret, so smart that even the indomitable police of America cannot solve them.

For these crimes, the very worst of crimes, America has a special team. Two individuals, both alike in dignity, in fair DC, where we lay our scene. Their names: <strong>Antony and Cleopatra.</strong>

He's the <strong>Vice President.</strong>
She's the <strong>Queen of Egypt.</strong>
Together, <strong>they fight crime!</strong>
<h2>Instructions</h2>\
Hello, and welcome to this very silly 2 player interactive fiction experiment. If you're here, it's hopefully because I asked you to test. If you're not, uh, well, I can't stop you, but really, please get in contact and tell me that I accidentally made this public (email's at moytravis@gmail.com).

Anyways, this experiment is meant to be played with 2 players, who are expected to be in communication throughout the game. A call is the intended way of playing, but you could try using text if you like.

This game is <strong>fully cooperative.</strong> You are working together to solve a mystery, so talking to the other player is encouraged.

If I'm not lurking on the call with you, please email your feedback to moytravis@gmail.com. Thanks muchly.

An important note - in the interest of putting up a MVP, I've stolen the scenario is wholesale from Sherlock Holmes, Consulting Detective, (specifically Case One).

Now, would you like to:
<<button [[Host a new game|HostGame]]>><</button>>
<<button [[Join a game that somebody else has hosted|JoinGame]]>><</button>>
<h3>In-Progress Games</h3>\
<<for _i to 0; _i lt Save.slots.length; _i++>><<capture _i>>\
  <<if Save.slots.has(_i)>>\
    <<set _saveName to Save.slots.get(_i).title>>\
    <<set _spanId to 'span-num-' + _i>>\
    <span @id="_spanId">\
      <<button _saveName>><<script>>
        Save.slots.load(State.temporary.i);
      <</script>><</button>>\
      <<button 'Delete Save'>><<script>>
        $('#span-num-' + State.temporary.i)[0].remove();
        Save.slots.delete(State.temporary.i);
      <</script>><</button>>
    </span>\
  <</if>>\
<</capture>><</for>>\


:: HostGame
<<include [[InitializeGameVariables]]>>\
<<script>>State.variables.sessionId = setup.uuidv4();<</script>>
<<script>>
  setup.Socket.connect(State.variables.sessionId);
<</script>>\
Your session identifier is:
<strong>$sessionId</strong>
Either copy and paste it to your partner or read it out loud to them. They will need to enter this code to join your game.

You can also find the session identifier at the top of the right sidebar. Press the button to continue once your partner has joined.

<<button [[Got it!|SelectCharacter]]>><</button>>


:: JoinGame
<<include [[InitializeGameVariables]]>>\
<<set _input>>\
Please enter the session identifier you'd like to join.
@@#session-input;\
<<if setup.Socket.DEBUG is true>>\
  <<set _defaultSessionId to 'b416b45b-7fb7-4761-a173-0bdec11de845'>>\
<<else>>\
  <<set _defaultSessionId to ''>>\
<</if>>\
<<textbox '_input' _defaultSessionId autofocus>>@@
@@#join-button;<<disable>><<button 'Session identifier is invalid.'>>
  <<script>>
    const targetId = $('#session-input input')[0].value;
    setup.Socket.connect(targetId);
    State.variables.sessionId = targetId;
    Engine.play('SelectCharacter');
  <</script>>
<</button>><</disable>>@@
<<done>><<script>>
  const button = $('#join-button button')
  $('#session-input input').on('input', function(ev) {
    if (setup.isUUID(ev.target.value)) {
      button.html('Join game.')
      button.prop('disabled', false)
    } else {
      button.html('Session identifier is invalid.')
      button.prop('disabled', true)
    }
  })
<</script>><</done>>\

<<button [[Back to main menu|Start]]>><</button>>

:: SelectCharacter
/* We initialize the variables here because it's the first screen on a new game */\
<<script>>
setup.initializeCluePoints();
<</script>>\
<h1>Select your character:</h1>\
@@#select-character-character-buttons;<<button 'Mark Antony, Vice President of Neo America.'>>
  <<send 'CHARACTER_SELECT' {character: 'Antony'}>><</send>>
<</button>>
<<button 'Cleopatra VII Philopator, Queen of Egypt.'>>
  <<send 'CHARACTER_SELECT' {character: 'Cleopatra'}>><</send>>
<</button>>@@

@@#select-character-player-selection;<<if $playerCharacterName is ''>>\
  You have not yet selected a character.\
<<else>>\
  You have selected $playerCharacterName.\
<</if>>@@
@@#select-character-partner-selection;<<if $partnerCharacterName is ''>>\
  Your partner has not yet selected a character.\
<<else>>\
  Your partner has selected $partnerCharacterName.\
<</if>>@@

@@#select-character-confirm;<<disable>><<button 'Confirm selection.'>>
  <<script>>setup.sendCharacterConfirmed()<</script>>
<</button>><</disable>>@@
<<receive 'CHARACTER_SELECT'>><<script>>console.log('RECEIVE CHAR SELECT CONTENTS ARE EXECUTED');<</script>><</receive>>\
<<receive 'CHARACTER_CONFIRM'>><<script>>console.log('RECEIVE CONTENTS ARE EXECUTED');<</script>><</receive>>\

/*
setup.Socket.registerHandler(setup.Socket.MessageTypes.CharacterSelect, function(data) {
  if (data.clientId === State.variables.clientId) {
    State.variables.playerCharacterName = data.character;
    $('#select-character-player-selection').text('You have selected ' + data.character + '.')
  } else {
    State.variables.partnerCharacterName = data.character;
    $('#select-character-partner-selection').text('Your partner has selected ' + data.character + '.')
  }
  // TODO: Synchronize the states
  const playerCN = State.variables.playerCharacterName;
  const partnerCN = State.variables.partnerCharacterName;
  if (playerCN !== '' && partnerCN !== '' && playerCN != partnerCN) {
    $('#select-character-confirm button').prop('disabled', false)
  } else {
    $('#select-character-confirm button').prop('disabled', true)
  }
})
*/\